using <%= namespace %>.Crosscutting.Services;
using TabTabGo.Core.Services;
namespace <%= namespace %>.Services;

public class GenericService<TEntity,TKey> : BaseService<TEntity,TKey>, IGenericService<TEntity,TKey>  where TEntity : Entity<TKey>
{    

    public GenericService(Crosscutting.Repositories.IUnitOfWork unitOfWork, IGenericRepository<TEntity, TKey> repository,  ILogger<GenericService<TEntity, TKey>> logger) : base(unitOfWork, repository, logger)
    {

    }

    protected override TKey GetKey(TEntity entity) => entity.Id;
    protected override Expression<Func<TEntity, bool>> GetKeyPredicate(TKey id) => e => e.Id.Equals(id);
}